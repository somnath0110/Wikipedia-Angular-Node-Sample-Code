{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/header/header.component.css","webpack:///./src/app/header/header.component.html","webpack:///./src/app/header/header.component.ts","webpack:///./src/app/listOfCity/cityList.module.ts","webpack:///./src/app/listOfCity/citylist.component.html","webpack:///./src/app/listOfCity/citylist.component.ts","webpack:///./src/app/listOfCity/citylist.service.ts","webpack:///./src/app/listOfCity/countryCode.filter.ts","webpack:///./src/app/listOfCity/description.filter.ts","webpack:///./src/app/listOfCity/filterCity.filter.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<div>\\n  <nav class=\\\"navbar navbar-expand-md bg-info navbar-dark\\\">\\n      <!-- Brand -->\\n      <a class=\\\"navbar-brand\\\" href=\\\"#\\\" >Wiki App</a>\\n    \\n      <!-- Toggler/collapsibe Button -->\\n      <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#collapsibleNavbar\\\">\\n        <span class=\\\"navbar-toggler-icon\\\"></span>\\n      </button>\\n    \\n      <!-- Navbar links -->\\n      <div class=\\\"collapse navbar-collapse\\\" id=\\\"collapsibleNavbar\\\">\\n        <ul class=\\\"navbar-nav\\\">\\n          <li class=\\\"nav-item\\\">\\n            <a class=\\\"nav-link\\\" [routerLink]=\\\"['/home']\\\">Home</a>\\n          </li> \\n        </ul>\\n      </div> \\n      \\n  </nav>\\n  <router-outlet></router-outlet>\\n</div>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/Router';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppComponent } from './app.component';\nimport { CityComponent } from './listOfCity/citylist.component';\nimport { HeaderComponent } from './header/header.component';\nimport { CityListService } from './listOfCity/citylist.service';\nimport { CountryCodePipe } from './listOfCity/countryCode.filter';\nimport { TrimPipe } from './listOfCity/description.filter';\nimport { CityListModule } from './listOfCity/cityList.module';\nimport { SerachCityPipe } from './listOfCity/filterCity.filter';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderComponent,\n    CityComponent,\n    CountryCodePipe,\n    TrimPipe,\n    SerachCityPipe\n  ],\n  imports: [\n    BrowserModule,\n    RouterModule.forRoot([\n        {path: 'home', component: CityComponent},\n        {path: '', redirectTo: 'home', pathMatch: 'full'}\n  ]),\n    HttpClientModule,\n    CityListModule,\n    FormsModule\n  ],\n  providers: [\n    CityListService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\"","module.exports = \"\"","import { Component} from '@angular/core';\n\n@Component({\n    selector: 'app-header',\n    templateUrl: './header.component.html',\n    styleUrls: ['./header.component.css']\n})\n\nexport class HeaderComponent {}\n","import {NgModule} from '@angular/core';\n\n\n@NgModule({\n    declarations: [\n\n    ],\n    imports: [],\n\n    providers: [\n    ]\n})\n\nexport class CityListModule {\n\n}\n","module.exports = \"<div class=\\\"row\\\">\\n    <div class=\\\"col-sm-10 offset-sm-1 text-center\\\">\\n        <h1 class=\\\"display-3\\\">Welcome to City List</h1>\\n        <div class=\\\"info-form\\\">\\n                <div class=\\\"form-group\\\">\\n                    <label class=\\\"sr-only\\\">Name</label>\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\"\\n                           placeholder=\\\"Search by country\\\"\\n                           [(ngModel)]=\\\"filterCity\\\">\\n                </div>\\n        </div>\\n        <br>\\n    </div>\\n</div>\\n<div class=\\\"container\\\">\\n    <div *ngFor=\\\"let list of cityList|serachCity:filterCity;let i = index\\\" class=\\\"d-inline-block p-2\\\">\\n            <div >\\n                    <div class=\\\"card\\\">\\n                            <img class=\\\"card-img-top\\\" src=\\\"../../assets/images/{{list.Area}}.jpg\\\"/>\\n                            <div class=\\\"card-body\\\">\\n                              <img class=\\\"flag\\\" src=\\\"https://www.countryflags.io/{{list.Country|countryCode:'code'}}/flat/64.png\\\"/>\\n                              <h4 class=\\\"card-title\\\">{{list.Area}}<h6>{{list.Country}}</h6></h4>\\n                              \\n                                \\n                              <p class=\\\"card-text\\\">\\n                                    <span class=\\\"badge badge-success\\\">Population: {{list.Population}}</span>\\n                                    <span class=\\\"badge badge-warning\\\">Currency: {{list.Country|countryCode:'currency'}}</span>\\n                                    <br/>\\n                                    <!--span>{{list.description|trimword}}</span-->\\n                                 \\n                                </p>\\n                              <a href=\\\"#\\\" class=\\\"btn btn-info\\\" data-toggle=\\\"modal\\\" \\n                              [attr.data-target]=\\\"'#city' + i\\\">See Details</a>\\n                            </div>\\n                    </div>\\n                    <!-- The Modal -->\\n                    <div class=\\\"modal\\\" id=\\\"city{{i}}\\\">\\n                            <div class=\\\"modal-dialog\\\">\\n                            <div class=\\\"modal-content\\\">\\n                                <!-- Modal Header -->\\n                                <div class=\\\"modal-header\\\">\\n                                <h4 class=\\\"modal-title\\\">\\n                                        <img src=\\\"https://www.countryflags.io/{{list.Country|countryCode:'code'}}/flat/64.png\\\"/>\\n                                    {{list.Area}}<br/>\\n                                    {{list.Country}}\\n                                        \\n                                </h4>\\n                                <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\">&times;</button>\\n                                </div>\\n                                \\n                                <!-- Modal body -->\\n                                <div class=\\\"modal-body\\\">\\n                                    \\n                                        <!--p class=\\\"card-text\\\">{{list.description}}</p-->\\n                                        <span class=\\\"badge badge-warning\\\">Population: {{list.Population}}</span><br/>\\n                                        <span class=\\\"badge badge-danger\\\">Capital City: {{list.Country|countryCode:'capital'}}</span><br/>\\n                                        <span class=\\\"badge badge-success\\\">Currency: {{list.Country|countryCode:'currency'}}</span>\\n                                </div>\\n                                \\n                                <!-- Modal footer -->\\n                                <div class=\\\"modal-footer\\\">\\n                                <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" data-dismiss=\\\"modal\\\">Close</button>\\n                                </div>\\n                                \\n                            </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n    </div>\\n<div>\\n\\n\\n\\n    <!--\\n         <div class=\\\"card\\\">\\n                        <div class=\\\"row\\\">\\n                            <img class=\\\"card-img-top\\\" src='' alt=\\\"weather\\\"/>\\n                        </div>\\n                        <div class=\\\"card-body\\\">\\n                            <span class=\\\"max\\\">{{list.country}}</span>\\n                            <h4 class=\\\"card-title\\\">{{list.country}}</h4>\\n                            <p class=\\\"card-text\\\">\\n                               <button>Click</button>   \\n                            </p>\\n                        </div>\\n                    </div>\\n    -->\"","import { Component, OnInit } from '@angular/core';\n\nimport {ICity} from './citylist.model';\nimport { CityListService } from './citylist.service';\n\n@Component({\n    templateUrl: './citylist.component.html'\n})\n\nexport class CityComponent implements OnInit {\n\n    constructor(private _CityListService: CityListService) {}\n\n    cityList: ICity[];\n\n    ngOnInit(): void {\n        this._CityListService.getCityList()\n            .subscribe((data) => this.cityList = data);\n    }\n\n\n\n}\n\n/*\nthis.cityList = data.results*/\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nimport { ICity } from './citylist.model';\n\n@Injectable()\n\nexport class CityListService {\n\n    private _ListUrl =  'http://localhost:8080/api';\n\n    constructor(private _http: HttpClient) {\n    }\n\n    getCityList(): Observable<ICity[]> {\n        return this._http.get<ICity[]>(this._ListUrl);\n    }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n    name: 'countryCode'\n})\n\nexport class CountryCodePipe implements PipeTransform {\n\n    transform(value: String, type: String) {\n        let output: String = '';\n        console.log('calling filter' , value);\n        const dictionaryCountryAbbreviationName = {\n            'Afghanistan': {\n                'code': 'af',\n                'currency': 'Afs (Afghan afghani)',\n                'capital': 'Kabul'},\n            'China': {\n                'code': 'cn',\n                'currency': 'CN¥ (Yuan)',\n                'capital': 'Beijing'},\n            'Bangladesh': {\n                'code': 'bd',\n                'currency': 'Tk (Bangladeshi Taka)',\n                'capital': 'Dhaka'},\n            'Hong Kong': {\n                'code': 'hk',\n                'currency': 'HK$ (HongKong Dollar)',\n                'capital': 'Victoria City'},\n            'India': {\n                'code': 'in',\n                'currency': '₹ (Rupee)',\n                'capital': 'Delhi'},\n            'Indonesia': {\n                'code': 'id',\n                'currency': 'Rp (Indonesian Rupiah)',\n                'capital': 'Jakarta'},\n            'Iran': {\n                'code': 'ir',\n                'currency': 'IRR (Iranian Rial)',\n                'capital': 'Tehran'},\n            'Iraq': {\n                'code': 'iq',\n                'currency': 'IQD (Iraqi Dinar)',\n                'capital': 'Baghdad'},\n            'Japan': {\n                'code': 'jp',\n                'currency': '¥ (Yen)',\n                'capital': 'Tokyo'},\n            'South Korea': {\n                'code': 'kr',\n                'currency': '₩ (Won)',\n                'capital': 'Seoul'},\n            'Malaysia': {\n                'code': 'my',\n                'currency': 'RM (Malaysian Ringgit)',\n                'capital': 'Kuala Lumpur'},\n            'Pakistan': {\n                'code': 'pk',\n                'currency': 'PKRs (Rupee)',\n                'capital': 'Islamabad'},\n            'Philippines': {\n                'code': 'ph',\n                'currency': '₱ (Philippine Peso)',\n                'capital': 'Manila'},\n            'Saudi Arabia': {\n                'code': 'sa',\n                'currency': 'SR (Saudi Riyal)',\n                'capital': 'Riyadh'},\n            'Singapore': {\n                'code': 'sg',\n                'currency': 'S$ (Singapore Dollar)',\n                'capital': 'Pulau Ujong'},\n            'Taiwan': {\n                'code': 'tw',\n                'currency': 'NT$ (Taiwan Dollar)',\n                'capital': 'Taipei'},\n            'Thailand': {\n                'code': 'th',\n                'currency': 'Rp (Indonesian Rupiah)',\n                'capital': 'Bangkok'},\n            'Vietnam': {\n                'code': 'vn',\n                'currency': '₫ (Vietnamese Dong)',\n                'capital': 'Hanoi'},\n\n        };\n\n        if (type === 'code') {\n            output = dictionaryCountryAbbreviationName[value.toString()].code;\n        } else if ( type === 'currency') {\n            output = dictionaryCountryAbbreviationName[value.toString()].currency;\n        } else {\n            output = dictionaryCountryAbbreviationName[value.toString()].capital;\n        }\n\n\n        console.log(output);\n        return output;\n    }\n}\n\n\n\n/*\n\nconst info = {\n            'India': {\n                'code': 'in',\n                'currency': '₹'}\n            }\n*/\n","import {Pipe, PipeTransform} from '@angular/core';\n\n@Pipe({\n    name: 'trimword'\n})\n\nexport class TrimPipe implements PipeTransform {\n    transform(value: string) {\n        value = value.substr(0, 70) + '...';\n        return value;\n    }\n}\n","import {Pipe, PipeTransform} from '@angular/core';\nimport { ICity } from './citylist.model';\n\n@Pipe({\n    name: 'serachCity'\n})\n\nexport class SerachCityPipe implements PipeTransform {\n    transform(value: ICity[], filterBy: string) {\n        filterBy = filterBy ? filterBy.toLowerCase() : null;\n        return filterBy ? value.filter((city: ICity) =>\n            (city.Country.toLowerCase().indexOf(filterBy) !== -1)) : value;\n    }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}